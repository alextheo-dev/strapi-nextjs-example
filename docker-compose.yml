services:
  strapi:
    container_name: cms
    env_file:
      - .env
      - ./cms/.env
    build:
      target: prod
      context: ./cms
      dockerfile: Dockerfile
    restart: always
    networks:
      - prod
    ports:
      - "1337:1337"
    volumes:
      - cms-uploads:/cms/public/uploads
    depends_on:
      - strapiDB

  strapiDB:
    container_name: cms_mysql
    env_file:
      - .env
    image: mysql:5.7.22
    restart: always
    ports:
      - "3306:3306"
    networks:
      - prod
    volumes:
      - prodea-db-data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  front:
    container_name: front
    restart: always
    env_file:
      - .env
      - ./front/.env
    build:
      target: prod
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "24678:24678"
    networks:
      - prod
    depends_on:
      - strapi

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    volumes:
      - ./proxy/nginx:/etc/nginx/conf.d
      - ./proxy/certbot/conf:/etc/letsencrypt
      - ./proxy/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    ports:
      - "80:80"
      - "443:443"
    networks:
      - prod
    depends_on:
      - front
      - strapi

  certbot:
    image: certbot/certbot
    volumes:
      - ./proxy/certbot/conf:/etc/letsencrypt
      - ./proxy/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  prodea-db-data:
  cms-uploads:

networks:
  prod:
    driver: bridge
